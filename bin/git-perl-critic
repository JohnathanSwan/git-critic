#!/usr/bin/env perl

# ABSTRACT: Command-line interface for Perl Git::Critic module
# PODNAME: git-perl-critic

use v5.10.0;
use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
my %opt_for;
GetOptions(
    \%opt_for,
    "verbose",       # show verbose information about what's happening
    "target=s",      # name of target (non-primary) branch to check
    "severity=s",    # Perl::Critic severity (default: 5, gentle)
    "help|?",        # show brief help
    "man",           # show full help
) || pod2usage( -verbose => 0 );

if ( !@ARGV ) {
    pod2usage(
        {
            -message =>
              "\nYou must supply the name of the branch you're diffing against\n",
            -exitval => 1,
            -verbose => 1
        }
    );
}
if ( @ARGV > 1 ) {
    pod2usage(
        {
            -message => "\nOnly one branch name must be supplied\n",
            -exitval => 2,
            -verbose => 1
        }
    );
}
my $primary = shift @ARGV;

# munge options
$opt_for{severity} ||= 5;

pod2usage( -verbose => 1 ) if ( $opt_for{help} );
pod2usage( -verbose => 2 ) if ( $opt_for{man} );

our $VERSION = '0.01';
use Git::Critic;
my $critic = Git::Critic->new(
    ( $opt_for{target} ? ( current_branch => $opt_for{target} ) : () ),
    primary_branch => $primary,
    verbose        => $opt_for{verbose},
    severity       => $opt_for{severity},
);
say STDERR $_ foreach $critic->run;

# vim: filetype=perl

__END__

=head1 SYNOPSIS

    git-perl-critic main

=head1 OPTIONS

Options:

    Option         Argument type   Description
    --target,-p    Str             Name of git branch to check (default is current branch)
    --severity,s   Str|Int         Perl::Critic severity level

Debugging options:

    --help,-h,-?                   Show brief help
    --man                          Show full help
    --verbose                

=head1 DESCRIPTION

Only report L<Perl::Critic|https://metacpan.org/pod/Perl::Critic> failures
on lines changed.

A command line interface to C<Git::Critic>.

You must pass the name of the "primary" branch you're diffing against to the
script. We used to use symbolic-refs to determine the name of that branch, but
it was fragile and it turns out that this is deprecated.
